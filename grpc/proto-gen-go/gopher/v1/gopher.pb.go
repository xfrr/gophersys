// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: gopher/v1/gopher.proto

package gopher

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateGopherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username string            `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Status   string            `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Metadata map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateGopherRequest) Reset() {
	*x = CreateGopherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gopher_v1_gopher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGopherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGopherRequest) ProtoMessage() {}

func (x *CreateGopherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gopher_v1_gopher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGopherRequest.ProtoReflect.Descriptor instead.
func (*CreateGopherRequest) Descriptor() ([]byte, []int) {
	return file_gopher_v1_gopher_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGopherRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateGopherRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGopherRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateGopherRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateGopherRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreateGopherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GopherId string `protobuf:"bytes,1,opt,name=gopher_id,json=gopherId,proto3" json:"gopher_id,omitempty"`
}

func (x *CreateGopherResponse) Reset() {
	*x = CreateGopherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gopher_v1_gopher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGopherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGopherResponse) ProtoMessage() {}

func (x *CreateGopherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gopher_v1_gopher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGopherResponse.ProtoReflect.Descriptor instead.
func (*CreateGopherResponse) Descriptor() ([]byte, []int) {
	return file_gopher_v1_gopher_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGopherResponse) GetGopherId() string {
	if x != nil {
		return x.GopherId
	}
	return ""
}

type GetGopherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GopherId string `protobuf:"bytes,1,opt,name=gopher_id,json=gopherId,proto3" json:"gopher_id,omitempty"`
}

func (x *GetGopherRequest) Reset() {
	*x = GetGopherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gopher_v1_gopher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGopherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGopherRequest) ProtoMessage() {}

func (x *GetGopherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gopher_v1_gopher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGopherRequest.ProtoReflect.Descriptor instead.
func (*GetGopherRequest) Descriptor() ([]byte, []int) {
	return file_gopher_v1_gopher_proto_rawDescGZIP(), []int{2}
}

func (x *GetGopherRequest) GetGopherId() string {
	if x != nil {
		return x.GopherId
	}
	return ""
}

type GetGopherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GetGopherResponse) Reset() {
	*x = GetGopherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gopher_v1_gopher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGopherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGopherResponse) ProtoMessage() {}

func (x *GetGopherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gopher_v1_gopher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGopherResponse.ProtoReflect.Descriptor instead.
func (*GetGopherResponse) Descriptor() ([]byte, []int) {
	return file_gopher_v1_gopher_proto_rawDescGZIP(), []int{3}
}

func (x *GetGopherResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetGopherResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ListGophersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListGophersRequest) Reset() {
	*x = ListGophersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gopher_v1_gopher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGophersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGophersRequest) ProtoMessage() {}

func (x *ListGophersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gopher_v1_gopher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGophersRequest.ProtoReflect.Descriptor instead.
func (*ListGophersRequest) Descriptor() ([]byte, []int) {
	return file_gopher_v1_gopher_proto_rawDescGZIP(), []int{4}
}

func (x *ListGophersRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ListGophersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gophers []*Gopher `protobuf:"bytes,1,rep,name=gophers,proto3" json:"gophers,omitempty"`
}

func (x *ListGophersResponse) Reset() {
	*x = ListGophersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gopher_v1_gopher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGophersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGophersResponse) ProtoMessage() {}

func (x *ListGophersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gopher_v1_gopher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGophersResponse.ProtoReflect.Descriptor instead.
func (*ListGophersResponse) Descriptor() ([]byte, []int) {
	return file_gopher_v1_gopher_proto_rawDescGZIP(), []int{5}
}

func (x *ListGophersResponse) GetGophers() []*Gopher {
	if x != nil {
		return x.Gophers
	}
	return nil
}

type UpdateGopherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GopherId string `protobuf:"bytes,1,opt,name=gopher_id,json=gopherId,proto3" json:"gopher_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateGopherRequest) Reset() {
	*x = UpdateGopherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gopher_v1_gopher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGopherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGopherRequest) ProtoMessage() {}

func (x *UpdateGopherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gopher_v1_gopher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGopherRequest.ProtoReflect.Descriptor instead.
func (*UpdateGopherRequest) Descriptor() ([]byte, []int) {
	return file_gopher_v1_gopher_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateGopherRequest) GetGopherId() string {
	if x != nil {
		return x.GopherId
	}
	return ""
}

func (x *UpdateGopherRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateGopherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateGopherResponse) Reset() {
	*x = UpdateGopherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gopher_v1_gopher_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGopherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGopherResponse) ProtoMessage() {}

func (x *UpdateGopherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gopher_v1_gopher_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGopherResponse.ProtoReflect.Descriptor instead.
func (*UpdateGopherResponse) Descriptor() ([]byte, []int) {
	return file_gopher_v1_gopher_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateGopherResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteGopherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GopherId string `protobuf:"bytes,1,opt,name=gopher_id,json=gopherId,proto3" json:"gopher_id,omitempty"`
}

func (x *DeleteGopherRequest) Reset() {
	*x = DeleteGopherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gopher_v1_gopher_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGopherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGopherRequest) ProtoMessage() {}

func (x *DeleteGopherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gopher_v1_gopher_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGopherRequest.ProtoReflect.Descriptor instead.
func (*DeleteGopherRequest) Descriptor() ([]byte, []int) {
	return file_gopher_v1_gopher_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteGopherRequest) GetGopherId() string {
	if x != nil {
		return x.GopherId
	}
	return ""
}

type DeleteGopherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteGopherResponse) Reset() {
	*x = DeleteGopherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gopher_v1_gopher_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGopherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGopherResponse) ProtoMessage() {}

func (x *DeleteGopherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gopher_v1_gopher_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGopherResponse.ProtoReflect.Descriptor instead.
func (*DeleteGopherResponse) Descriptor() ([]byte, []int) {
	return file_gopher_v1_gopher_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteGopherResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Gopher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username string            `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Status   string            `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Metadata map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Gopher) Reset() {
	*x = Gopher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gopher_v1_gopher_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gopher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gopher) ProtoMessage() {}

func (x *Gopher) ProtoReflect() protoreflect.Message {
	mi := &file_gopher_v1_gopher_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gopher.ProtoReflect.Descriptor instead.
func (*Gopher) Descriptor() ([]byte, []int) {
	return file_gopher_v1_gopher_proto_rawDescGZIP(), []int{10}
}

func (x *Gopher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Gopher) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Gopher) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Gopher) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Gopher) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_gopher_v1_gopher_proto protoreflect.FileDescriptor

var file_gopher_v1_gopher_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6f, 0x70, 0x68,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f,
	0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0x2a, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x42, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x07, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x73, 0x22,
	0x46, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x70, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x32, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0xda, 0x01, 0x0a, 0x06, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x84, 0x03, 0x0a,
	0x0e, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x4b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x70, 0x68,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x70, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x6f, 0x70, 0x68,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x70, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x70, 0x68, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x67, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0xbd, 0x02, 0x5a, 0x0d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x6f, 0x70, 0x68, 0x65, 0x72, 0x92, 0x41, 0xaa, 0x02, 0x12, 0xef, 0x01, 0x0a, 0x13, 0x47, 0x6f,
	0x70, 0x68, 0x65, 0x72, 0x73, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x20, 0x41, 0x50,
	0x49, 0x12, 0x30, 0x41, 0x20, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x67, 0x52, 0x50, 0x43,
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x52, 0x45, 0x53, 0x54, 0x66, 0x75, 0x6c, 0x20, 0x41, 0x50, 0x49,
	0x20, 0x74, 0x6f, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x20, 0x47, 0x6f, 0x70, 0x68, 0x65,
	0x72, 0x73, 0x2e, 0x22, 0x4b, 0x0a, 0x24, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x69, 0x73, 0x63, 0x6f,
	0x20, 0x52, 0x6f, 0x6d, 0x65, 0x72, 0x6f, 0x20, 0x2d, 0x20, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x20, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x12, 0x12, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x66, 0x72, 0x6f, 0x6d, 0x65, 0x72, 0x6f, 0x2e, 0x6d, 0x65, 0x1a,
	0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x40, 0x66, 0x72, 0x6f, 0x6d, 0x65, 0x72, 0x6f, 0x2e, 0x6d, 0x65,
	0x2a, 0x55, 0x0a, 0x2e, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x20, 0x69, 0x73, 0x20, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x64, 0x20, 0x75, 0x6e, 0x64,
	0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x49, 0x54, 0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x73, 0x2f, 0x4d, 0x49, 0x54, 0x32, 0x02, 0x76, 0x31, 0x1a, 0x09, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x03, 0x2f, 0x76, 0x31, 0x2a, 0x02, 0x01, 0x02, 0x32,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a,
	0x73, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gopher_v1_gopher_proto_rawDescOnce sync.Once
	file_gopher_v1_gopher_proto_rawDescData = file_gopher_v1_gopher_proto_rawDesc
)

func file_gopher_v1_gopher_proto_rawDescGZIP() []byte {
	file_gopher_v1_gopher_proto_rawDescOnce.Do(func() {
		file_gopher_v1_gopher_proto_rawDescData = protoimpl.X.CompressGZIP(file_gopher_v1_gopher_proto_rawDescData)
	})
	return file_gopher_v1_gopher_proto_rawDescData
}

var file_gopher_v1_gopher_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_gopher_v1_gopher_proto_goTypes = []interface{}{
	(*CreateGopherRequest)(nil),  // 0: gopher.v1.CreateGopherRequest
	(*CreateGopherResponse)(nil), // 1: gopher.v1.CreateGopherResponse
	(*GetGopherRequest)(nil),     // 2: gopher.v1.GetGopherRequest
	(*GetGopherResponse)(nil),    // 3: gopher.v1.GetGopherResponse
	(*ListGophersRequest)(nil),   // 4: gopher.v1.ListGophersRequest
	(*ListGophersResponse)(nil),  // 5: gopher.v1.ListGophersResponse
	(*UpdateGopherRequest)(nil),  // 6: gopher.v1.UpdateGopherRequest
	(*UpdateGopherResponse)(nil), // 7: gopher.v1.UpdateGopherResponse
	(*DeleteGopherRequest)(nil),  // 8: gopher.v1.DeleteGopherRequest
	(*DeleteGopherResponse)(nil), // 9: gopher.v1.DeleteGopherResponse
	(*Gopher)(nil),               // 10: gopher.v1.Gopher
	nil,                          // 11: gopher.v1.CreateGopherRequest.MetadataEntry
	nil,                          // 12: gopher.v1.Gopher.MetadataEntry
}
var file_gopher_v1_gopher_proto_depIdxs = []int32{
	11, // 0: gopher.v1.CreateGopherRequest.metadata:type_name -> gopher.v1.CreateGopherRequest.MetadataEntry
	10, // 1: gopher.v1.ListGophersResponse.gophers:type_name -> gopher.v1.Gopher
	12, // 2: gopher.v1.Gopher.metadata:type_name -> gopher.v1.Gopher.MetadataEntry
	0,  // 3: gopher.v1.GophersManager.Create:input_type -> gopher.v1.CreateGopherRequest
	2,  // 4: gopher.v1.GophersManager.Get:input_type -> gopher.v1.GetGopherRequest
	4,  // 5: gopher.v1.GophersManager.List:input_type -> gopher.v1.ListGophersRequest
	6,  // 6: gopher.v1.GophersManager.Update:input_type -> gopher.v1.UpdateGopherRequest
	8,  // 7: gopher.v1.GophersManager.Delete:input_type -> gopher.v1.DeleteGopherRequest
	1,  // 8: gopher.v1.GophersManager.Create:output_type -> gopher.v1.CreateGopherResponse
	3,  // 9: gopher.v1.GophersManager.Get:output_type -> gopher.v1.GetGopherResponse
	5,  // 10: gopher.v1.GophersManager.List:output_type -> gopher.v1.ListGophersResponse
	7,  // 11: gopher.v1.GophersManager.Update:output_type -> gopher.v1.UpdateGopherResponse
	9,  // 12: gopher.v1.GophersManager.Delete:output_type -> gopher.v1.DeleteGopherResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_gopher_v1_gopher_proto_init() }
func file_gopher_v1_gopher_proto_init() {
	if File_gopher_v1_gopher_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gopher_v1_gopher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGopherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gopher_v1_gopher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGopherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gopher_v1_gopher_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGopherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gopher_v1_gopher_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGopherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gopher_v1_gopher_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGophersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gopher_v1_gopher_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGophersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gopher_v1_gopher_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGopherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gopher_v1_gopher_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGopherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gopher_v1_gopher_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGopherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gopher_v1_gopher_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGopherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gopher_v1_gopher_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gopher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gopher_v1_gopher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gopher_v1_gopher_proto_goTypes,
		DependencyIndexes: file_gopher_v1_gopher_proto_depIdxs,
		MessageInfos:      file_gopher_v1_gopher_proto_msgTypes,
	}.Build()
	File_gopher_v1_gopher_proto = out.File
	file_gopher_v1_gopher_proto_rawDesc = nil
	file_gopher_v1_gopher_proto_goTypes = nil
	file_gopher_v1_gopher_proto_depIdxs = nil
}
