{
  "swagger": "2.0",
  "info": {
    "title": "Gophers Manager API",
    "description": "A simple gRPC and RESTful API to manage Gophers.",
    "version": "v1",
    "contact": {
      "name": "Francisco Romero - Software Engineer",
      "url": "https://fromero.me",
      "email": "work@fromero.me"
    },
    "license": {
      "name": "This project is licensed under the MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [
    {
      "name": "GophersManager"
    }
  ],
  "host": "localhost",
  "basePath": "/v1",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/gophers": {
      "get": {
        "summary": "Retrieve all Gophers matching the given query.",
        "operationId": "GophersManager_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListGophersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GophersManager"
        ]
      }
    },
    "/gophers/{gopherId}": {
      "get": {
        "summary": "Retrieve a Gopher by ID if it exists.",
        "operationId": "GophersManager_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGopherResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gopherId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GophersManager"
        ]
      },
      "delete": {
        "summary": "Delete a Gopher by ID.",
        "operationId": "GophersManager_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteGopherResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gopherId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GophersManager"
        ]
      },
      "put": {
        "summary": "Update an existing Gopher by ID.",
        "operationId": "GophersManager_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateGopherResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gopherId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GophersManager"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateGopherResponse": {
      "type": "object",
      "properties": {
        "gopherId": {
          "type": "string"
        }
      }
    },
    "v1DeleteGopherResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1GetGopherResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1Gopher": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1ListGophersResponse": {
      "type": "object",
      "properties": {
        "gophers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Gopher"
          }
        }
      }
    },
    "v1UpdateGopherResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    }
  }
}
